import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.marc4j.marc.Record;

private static final Pattern COORDINATES_PATTERN = Pattern.compile("^([eEwWnNsS])(\\d{3})(\\d{2})(\\d{2})");

public String getGeoLocation(Record record) {
    String d = indexer.getFirstFieldVal(record, "034d");
    String e = indexer.getFirstFieldVal(record, "034e");
    String f = indexer.getFirstFieldVal(record, "034f");
    String g = indexer.getFirstFieldVal(record, "034g");
    if (d != null && e != null && f != null && g != null) {
        Double west = coordinateToDecimal(d);
        Double east = coordinateToDecimal(e);
        Double north = coordinateToDecimal(f);
        Double south = coordinateToDecimal(g);
        String result = String.format("%s %s %s %s", new Object[] { west, east, north, south });
        if (validateCoordinates(west, east, north, south)) {
            return result;
        }
    }
    return null;
}

public Double coordinateToDecimal(String coordinateStr) {
    Matcher matcher = COORDINATES_PATTERN.matcher(coordinateStr);
    if (matcher.matches()) {
        String hemisphere = matcher.group(1).toUpperCase();
        int degrees = Integer.parseInt(matcher.group(2));
        int minutes = Integer.parseInt(matcher.group(3));
        int seconds = Integer.parseInt(matcher.group(4));
        double coordinate = degrees + (minutes / 60.0) + (seconds / 3600.0); 
        if (hemisphere.equals("W") || hemisphere.equals("S")) {
        	coordinate *= -1;
        }
        return coordinate;
    } else {
        return null;
    }
}

public boolean validateCoordinates(Double west, Double east, Double north, Double south) {
	if (west == null || east == null || north == null || south == null) {
		return false;
	}
	if (west > 180.0 || west < -180.0 || east > 180.0 || east < -180.0) {
		return false;
	}
	if (north > 90.0 || north < -90.0 || south > 90.0 || south < -90.0) {
		return false;
	}
	if (north < south || west > east) {
		return false;
	}
	return true;
}
